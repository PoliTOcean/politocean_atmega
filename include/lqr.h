#ifndef LQR_H
#define LQR_H
#include <Arduino.h>
#include <stddef.h>
#include <stdint.h>

#include "Matlib.h"

using namespace matlib;

typedef struct {
  uint8_t x, y;
} size_m;

class LQRException {
  const char *_msg;

public:
  LQRException(const char *msg) : _msg(msg) {}
  const char *what() const { return _msg; }
};

class LQR {
  static const size_t kDim = 6;
  

  const Matrix<6, 6> Kq = {
      79.8353641734741,      7.71500505614214e-15,  -4.68307091084881e-16,
      -6.16904191723207e-14, -2.10162632564376e-15, 1.42133591467648e-16,
      -1.03855827757500e-16, 79.8353658893232,      -1.10290246480219e-16,
      -9.19233141886068e-17, 1.46214887783817e-14,  -1.00738774139841e-16,
      6.54038357403978e-17,  1.67417674835514e-16,  79.8353743781172,
      1.34692582405450e-16,  -4.02174306879020e-17, -1.39547145889057e-14,
      1.60081712711832e-14,  1.06692273248373e-17,  -9.57066325347667e-16,
      2.31327409166403,      1.93605269510235e-16,  2.96714323574488e-16,
      -5.85927532684634e-15, -5.22697863991803e-14, -5.50121703568022e-16,
      5.86795847867045e-17,  2.32810181465227,      -7.14989416304538e-16,
      -1.54551228030103e-15, -1.13959263687837e-14, 2.96416250612896e-14,
      1.16820987929455e-15,  2.38877826699372e-17,  2.42714478784609};
  const Matrix<6, 6> Kx = {
      -44.0328726601685,     -2.58497000264062e-16, 5.00517836499246e-17,
      8.56829358581200e-15,  7.41021949000937e-16,  -4.76429724286548e-17,
      1.19830218711475e-16,  -44.0328693333952,     2.08540733565884e-16,
      4.09834153983074e-17,  4.15781654193783e-16,  3.58376052981936e-17,
      1.87818704381869e-17,  -7.48032598592689e-17, -44.0328528750017,
      -1.33035412371676e-16, 8.47389409094342e-18,  1.38336814875844e-15,
      -1.82841870803806e-14, 2.34114249868176e-17,  -1.48951024221141e-15,
      -1.00216347433464,     -7.36657948248760e-17, -1.45184946303894e-16,
      1.09132694885787e-15,  1.95000946271270e-14,  -8.25797377592402e-19,
      -2.22571104298399e-17, -1.02350602977487,     2.44337448206322e-16,
      4.02777446645080e-16,  5.12100121297323e-15,  -1.45645846789405e-14,
      -4.83967924327114e-16, -4.11135934027878e-17, -1.18762344011595};

  Integrator<6> integrator;
  
  
    
  

public:
  LQR() : integrator(Matrix<6>::zeros(), 0.1) {}

  Matrix<6, 1> compute(const Matrix<6> &measures) {
    

    Matrix<6> error = -measures;

    integrator.setInput(error);
    integrator.step();

    Matrix<6> outKx = Kx * measures;
    Matrix<6> outKq = Kq * integrator.getState();;

    Matrix<6> sum = -(outKq + outKx);

    
    return sum;
  }

  Matrix<6, 1> measurements(Matrix<6, 1> imuMeasurements, Matrix<6,1> commands){
    
    

    for(int i = 0; i < 6; i++){
      if( abs(commands(i, 0) - 127.0) > 10.0){
         imuMeasurements(i, 0) = 0.0;
      }
    }
    return imuMeasurements;
  }
};

#endif // LQR_H
